{
  "rules": {

    "users": {
      ".indexOn": ["phoneNumber"],
      "$uid": {
        "phoneNumber": {
          ".read": true,
          ".write": false
        },
        "publicProfile": {
          ".read": true,
          ".write": "$uid === auth.uid"
        },
        "serverData": {
          ".read": "$uid === auth.uid",
          ".write": false
        }
      }
    },
    "userContacts": {
      "$uid": {
        ".write": false,
        ".read": "$uid === auth.uid"
      }
    },
    "userChats": {
      "$uid": {
        ".indexOn": ["lastMessageTimestamp"],
        "$chatId": {
          "lastOpenedTimestamp": {
            ".validate": "newData.isNumber() && newData.val() > now - 30000 && newData.val() <= now",
            ".write": "$uid === auth.uid"
          },
          "readMessages": {
            ".validate": "newData.isNumber() && data.parent().child('totalMessages').val() - newData.val() >= 0",
            ".write": "$uid === auth.uid"
          },
          "$allOtherFields": {
            ".write": false
          }
        },
        ".read": "$uid === auth.uid"
      }
    },
    "chats": {
      ".indexOn": ["directChatKey"],
      "$chatId": {
        ".write": false,
        ".read": false
      }
    },
    "chatMembers": {
      "$chatId": {
        ".write": false,
        ".read": "data.child(auth.uid).exists()"
      }
    },
    "chatMessages": {
      "$chatId": {
        ".indexOn": ["timestamp"],
        "$messageId": {
          "timestamp": { ".validate": "newData.isNumber()" },
          "senderId": { ".validate": true },
          "$unknownProp": { ".validate": false },
          "message": {
            "messageCode": { ".validate": "newData.val() == 1 || newData.val() == 2" },
            "$unknownProp": { ".validate": false }
          },
          ".write": "!data.exists() && newData.hasChildren(['timestamp', 'senderId', 'message']) && newData.child('senderId').val() == auth.uid && root.child('chatMembers').child($chatId).child(auth.uid).exists()"
        },
        ".read": "root.child('chatMembers').child($chatId).child(auth.uid).exists()"
      }
    }
  }
}
